services:
  mysql-db-rooms:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydatabase
      MYSQL_TCP_PORT: 3306
    ports:
    - 3306:3306
    expose:
      - 3306
    volumes:
      - mysql-data-rooms:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  node-app-rooms:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: 3000
      DB_HOST: mysql-db-rooms
      DB_PORT: 3306
      DB_USER: root
      DB_NAME: mydatabase
      DB_PASSWORD: password
      MINIO_HOST: rooms-minio
      MINIO_PORT: 9000
      MINIO_USER: root
      MINIO_PASSWORD: password
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      mysql-db-rooms:
        condition: service_healthy
      rooms-minio:
        condition: service_healthy
    networks:
      - mynetwork

  rooms-minio:
    image: minio/minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - minio-data-rooms:/data
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data-rooms:
  minio-data-rooms:

networks:
  mynetwork:
    driver: bridge
